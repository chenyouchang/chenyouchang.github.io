<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo的提交与克隆</title>
      <link href="/posts/df2b7808.html"/>
      <url>/posts/df2b7808.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042248757.png" alt="image-20230204150818836"></p><h1 id="Hexo的提交与克隆"><a href="#Hexo的提交与克隆" class="headerlink" title="Hexo的提交与克隆"></a>Hexo的提交与克隆</h1><h2 id="存在的问题"><a href="#存在的问题" class="headerlink" title="存在的问题"></a>存在的问题</h2><p>hexo通过Git上传本地项目到Github或者Gitee，如果我们更改了站点的主题，上传项目的时候themes文件中的主题无法提交到远程仓库</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042244425.png" alt="image-20230204220426855"></p><p>原因是butterfly主题也是从仓库里拉取下来的 他关联到了作者的git仓库 所以提交不上去</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042245680.png" alt="image-20230204220620865"></p><p>因此我们提交到远程仓库的时候，把主题文件中的.git文件剪切，保存到桌面或者其他文件夹，再上传项目；</p><p>克隆的时候，从远程仓库拉去项目，再把.git文件复制进去即可。</p><h2 id="Hexo提交到远程仓库"><a href="#Hexo提交到远程仓库" class="headerlink" title="Hexo提交到远程仓库"></a>Hexo提交到远程仓库</h2><blockquote><p>考虑到Github的网络问题，这里使用Gitee演示</p></blockquote><p>1.创建个人仓库</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042245819.png" alt=""></p><p>2.移除主题目录中的.git文件夹</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042245061.png" alt="image-20230204221940595"></p><p>3.在站点的根目录下右键Git Bash Here，打开git终端</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042245647.png" alt="image-20230204222225970"></p><p>4.填写用户名和邮箱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;用户名&quot;</span><br><span class="line">git config --global user.email &quot;9400656+用户名@user.noreply.gitee.com&quot;</span><br></pre></td></tr></table></figure><p>5.初始化本地仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br></pre></td></tr></table></figure><p>6.提交项目到暂存区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>7.项目从暂存区提交到本地仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;初始化提交&quot;</span><br></pre></td></tr></table></figure><p>8.关联远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://gitee.com/chen4918/blog.git</span><br></pre></td></tr></table></figure><p>9.项目从本地仓库提交到远程仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin &quot;master&quot;</span><br></pre></td></tr></table></figure><p>完成上述步骤之后，项目已经提交到远程仓库</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042245133.png" alt="image-20230204222943937"></p><p>可以看到主题中的文件已经提交上来了</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042245548.png" alt="image-20230204223417398"></p><h2 id="远程仓库克隆到本地"><a href="#远程仓库克隆到本地" class="headerlink" title="远程仓库克隆到本地"></a>远程仓库克隆到本地</h2><p>1.点击克隆按钮，复制里面的HTTPS链接</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042245060.png" alt="image-20230204223550218"></p><p>2.克隆项目到本地</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/chen4918/blog.git</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042245466.png" alt="image-20230204223737623"></p><p>3.将.git文件夹复制到主题目录下</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042245013.png" alt="image-20230204223916363"></p><p>4.打开cmd窗口，切换到站点根目录，使用以下命令安装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042246991.png" alt="image-20230204224220448"></p><p>5.启动项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042246799.png" alt="image-20230204224352391"></p><p>6.浏览器访问<a href="http://localhost:4000/，访问成功">http://localhost:4000/，访问成功</a></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302042246257.png" alt="image-20230204224429813"></p>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo的Vercel部署和绑定自定义域名</title>
      <link href="/posts/256a65b.html"/>
      <url>/posts/256a65b.html</url>
      
        <content type="html"><![CDATA[<p><img src="D:\JulissaBlog\blog\source\_posts\assets\202302041508237.png" alt="image-20230204150818836"></p><h1 id="Hexo的Vercel部署和绑定自定义域名"><a href="#Hexo的Vercel部署和绑定自定义域名" class="headerlink" title="Hexo的Vercel部署和绑定自定义域名"></a>Hexo的Vercel部署和绑定自定义域名</h1><h2 id="Vercel部署"><a href="#Vercel部署" class="headerlink" title="Vercel部署"></a>Vercel部署</h2><p>Vercel简介：vercel是一个代码托管平台，它能够托管你的静态html界面，甚至能够托管你的node.js与Python服务端脚本.</p><p>官网地址：<a href="https://vercel.com/">https://vercel.com/</a></p><ol><li>登录Vercel，登录选择关联GitHub账户，就可以在vercel中直接托管你的GitHub库中的项目了。</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041356689.png" alt="image-20230204124125335"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041356753.png" alt="image-20230204124527084"></p><ol><li>点击右上角的Add New Project创建新的项目</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041357019.png" alt="image-20230204125744462"></p><ol><li>选择only select repositories，选择项目所在的仓库</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041357785.png" alt="image-20230204125854973"></p><ol><li>点击install按钮</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041357933.png" alt="image-20230204125913233"></p><ol><li>看到你Github账号的仓库，选择你刚刚部署成功的存储静态博客的仓库<code>&lt;username&gt;.github.io</code>右边的<code>Import</code>选项，表示你要导入该仓库</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041357950.png" alt="image-20230204130052752"></p><ol><li>Project Name名称可以随意填写，之后点击Deploy进行部署</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041357580.png" alt="image-20230204130652359"></p><ol><li>部署成功，下图是该项目的控制台</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041357863.png" alt="image-20230204130617150"></p><h2 id="绑定自定义域名"><a href="#绑定自定义域名" class="headerlink" title="绑定自定义域名"></a>绑定自定义域名</h2><ol><li>在Vercel的控制台点击View Domains</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041357623.png" alt="image-20230204130751724"></p><ol><li>填写购买的域名，点击Add</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041358587.png" alt="image-20230204130353941"></p><ol><li>选择第一个</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041358533.png" alt="image-20230204130402831"></p><ol><li>添加后他会提示你添加DNS解析记录</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041358332.png" alt="image-20230204130940913"></p><ul><li>如果是一级域名，需要解析两个，一个是@，另外一个是www，Vercel建议是<code>@</code>的解析重定向至www</li><li>如果是二级域名，只需要解析一个</li></ul><p>下面是解析@示例</p><p>（1）进入域名服务器的DNA解析，点击解析</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041358781.png" alt="image-20230204131020977"></p><p>（2）添加记录</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041400395.png" alt="image-20230204131045368"></p><p>（3）填入Type，Name，Value，点击确定</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041358225.png" alt="image-20230204133804108"></p><ul><li>解析www的步骤和进行@一致</li><li>两条解析均匀完成</li></ul><p><img src="E:\项目源码\assets\202302041358642.png" alt="image-20230204131500386"></p><ol><li>下面是解析成功之后的界面</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041359933.png" alt="image-20230204131514981"></p><ol><li>在浏览器输入自定义域名，访问成功</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041358081.png" alt="image-20230204131952745"></p><ol><li>添加自定义域名之后，需要在根目录_config.yml文件中的url配置项为自己的新域名，这样博客的文章链接才会正确生成</li></ol><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041358221.png" alt="image-20230204132030925"></p>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IntelliJ IDEA 2022的安装与激活</title>
      <link href="/posts/c12e0e07.html"/>
      <url>/posts/c12e0e07.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071945029.png" alt="image-20230206074352715"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>IntelliJ IDEA 是一款跨平台的开发工具，支持 Windows、Mac、Linux 等操作系统</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>1.下载</p><p>网盘链接：<a href="https://pan.baidu.com/s/1qTN8lkVIDzHpeYf33zrlDw">https://pan.baidu.com/s/1qTN8lkVIDzHpeYf33zrlDw</a><br>提取码：Juli</p><p>2.解压</p><p>解压后得到下图的文件</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071950356.png" alt="image-20230207195048238"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>1.双击解压包中的.exe文件进行安装</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071946287.png" alt="image-20230207192454540"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071946254.png" alt="1667809007795"></p><p>2.根据自己的需要选择安装路径</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071946699.png" alt="1667809043200"></p><p>3.选择自己需要的配置进行安装，默认即可</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071946849.png" alt="1667809085446"></p><p>4.选择开始菜单文件夹后，点击 Install 等待安装</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071947172.png" alt="1667809100280"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071947502.png" alt="1667809160157"></p><h1 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h1><p>1.将解压包中ja-netfilter文件夹拷贝到C盘跟目录下</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071948730.png" alt="image-20230207194855017"></p><p>2.引入补丁进入IDEA安装的bin目录</p><p>bin目录的路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\JetBrains\IntelliJ IDEA 2022.2.3\bin</span><br></pre></td></tr></table></figure><p>修改bin目录下的idea64.exe.vmoptions</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071947230.png" alt="1667809527162"></p><p>添加以下内容，<strong>保存即可</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 引用补丁，补丁不能包含中文路径，否则会失效</span><br><span class="line">-javaagent:C:/ja-netfilter/ja-netfilter.jar</span><br><span class="line"># 最新Idea 版本需要添加下面两行，否则会报 key valid</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071947828.png" alt="img"></p><p>3.打开idea，并输入下面的激活码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZCB571FZHV-eyJsaWNlbnNlSWQiOiJaQ0I1NzFGWkhWIiwibGljZW5zZWVOYW1lIjoiZnV6emVzIGFsbHkiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQREIiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTA3LTAxIiwicGFpZFVwVG8iOiIyMDIzLTA3LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTSSIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDctMDEiLCJwYWlkVXBUbyI6IjIwMjMtMDctMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBDIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQ1dNUCIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDctMDEiLCJwYWlkVXBUbyI6IjIwMjMtMDctMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFBTIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUkIiLCJmYWxsYmFja0RhdGUiOiIyMDIzLTA3LTAxIiwicGFpZFVwVG8iOiIyMDIzLTA3LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUEdPIiwiZmFsbGJhY2tEYXRlIjoiMjAyMy0wNy0wMSIsInBhaWRVcFRvIjoiMjAyMy0wNy0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQU1ciLCJmYWxsYmFja0RhdGUiOiIyMDIzLTA3LTAxIiwicGFpZFVwVG8iOiIyMDIzLTA3LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBXUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjMtMDctMDEiLCJwYWlkVXBUbyI6IjIwMjMtMDctMDEiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMjA3MDFQU0FOMDAwMDA1IiwiaGFzaCI6IlRSSUFMOi01OTQ5ODgxMjIiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-JNpWl3tvfBw9nYALTrBlJzoryrKHhqmiBxP5IljC6Hlgmb6YlOH8vPngzoyLYa+cGDMVj6fipEpm+BEqIA7oAoBYSu1ZPdzkHAa94apJg+CUQwuw+EJaATdKTANuKYTBsay6WsnrUh8vbIaJpGz19z+uOAc4xRP+gtuyjiwkNECZ6Y9qD+Dx3Gm5xXI3UvKqjPYIhXk23n1pjlxFIUmhD7BumdxF8JHmJJhd/K5FaXQU/K9pMp70GfmSS2KJgxm6SXfslWs/bF5GTY3i1GA6ez05ZyJwsmJMZ1v6W7GWrWNHDLK7i7aXhOLdK9u+pCz+2FpKmadRznpSmixDzj37ig==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071948687.png" alt="1667809764463"></p><p>4.激活成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071948251.png" alt="1667809788063"></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 的安装与配置</title>
      <link href="/posts/bd12b444.html"/>
      <url>/posts/bd12b444.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072219263.png" alt="image-20230206074352715"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>MySQL是一个开源的关系型数据库管理系统。</p><p>MySQL是一种关联数据库管理系统，将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><p>MySQL支持大型的数据库，可以处理拥有上千万条记录的大型数据库。支持5000万条记录的数据仓库，32位系统表文件最大可支持4GB，64位系统支持最大的表文件为8TB。</p><p>MySQL使用标准的SQL数据语言形式。</p><p>MySQL 可以运行于多个系统上，并且支持多种语言。这些编程语言包括 C、C++、Python、Java、Perl、PHP、Eiffel、Ruby 和 Tcl 等。</p><p>MySQL的优点：</p><ul><li><p>开放源代码，使用成本低。</p></li><li><p>性能卓越，服务稳定I</p></li><li><p>软件体积小，使用简单，并且易于维护。</p></li><li><p>历史悠久，社区用户非常活跃，遇到问题可以寻求帮助。</p></li><li><p>许多互联网公司在用，经过了时间的验证。</p></li></ul><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>1.下载</p><p>官网下载地址：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p><blockquote><p>这里提供了5.5.40版本的MySQL</p></blockquote><p>链接：<a href="https://pan.baidu.com/s/1ecGqj62DLJ4toVlwS_jlXA">https://pan.baidu.com/s/1ecGqj62DLJ4toVlwS_jlXA</a><br>提取码：Juli</p><p>2.解压</p><p>解压后得到下图的文件，根据自己的需要进行选择</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072339850.png" alt="image-20230207230051941"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>1.双击解压文件夹中的.msi文件进行安装</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340388.png" alt="image-20230207230215186" style="zoom:50%;" /></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340119.png" alt="image-20230207230243562" style="zoom:50%;" /></p><p>2.选择安装类型，有“Typical（默认）”、“Complete（完全）“Custom（用户自定 义）”三个选项，选<br>择“Custom”，按“next”键继续</p><p>3.选择安装路径</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340183.png" alt="image-20230207233012711" style="zoom:50%;" /></p><p>4.点击Finish完成安装</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340789.png" alt="image-20230207230604410" style="zoom:50%;" /></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340627.png" alt="image-20230207230632619" style="zoom:50%;" /></p><p>1.选择配置类型，这里选择Detailed Configuration</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340159.png" alt="image-20230207233051478" style="zoom:50%;" /></p><p>2.选择服务类型，这里选择Developer Machine</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072341203.png" alt="image-20230207233135496" style="zoom:50%;" /></p><p>3.选择数据库的使用方式，这里选择Multifuctional DataBase</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340701.png" alt="image-20230207233217332" style="zoom:50%;" /></p><p>4.选择驱动，默认即可</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072343502.png" alt="image-20230207234302724" style="zoom:50%;" /></p><p>5.设置到服务器的并发连接的大致数量，选择Decision Support(DSS)/OLAP</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340809.png" alt="image-20230207233254834" style="zoom:50%;" /></p><p>6.设置网络选项，端口3306</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072341595.png" alt="image-20230207233409352" style="zoom:50%;" /></p><p>7.选择默认字符集，选择Best Support For Multilingualism</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340173.png" alt="image-20230207233343423" style="zoom:50%;" /></p><p>8.设置Windows选项</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072341198.png" alt="image-20230207233534016" style="zoom:50%;" /></p><p>9.设置安全选项</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340662.png" alt="image-20230207233604007" style="zoom:50%;" /></p><p>10.进行配置</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072340206.png" alt="image-20230207230944316" style="zoom:50%;" /></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072341940.png" alt="image-20230207231000140" style="zoom:50%;" /></p><p>配置完成</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>命令行输入以下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p    #回车，输入密码，密码为上面配置的密码，用户名默认为root</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072341501.png" alt="image-20230207233827200"  /></p><p>测试成功</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Navicat 16 for MySQL 的安装与激活</title>
      <link href="/posts/ddd9e8d2.html"/>
      <url>/posts/ddd9e8d2.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072219263.png" alt="image-20230206074352715"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="Navicat-for-MySQL"><a href="#Navicat-for-MySQL" class="headerlink" title="Navicat for MySQL"></a>Navicat for MySQL</h2><p>Navicat for MySQL 是一套管理和开发 MySQL 或 MariaDB 的理想解决方案，支持单一程序，可同时连接到MySQL 和 MariaDB。这个功能齐备的前端软件为数据库管理、开发和维护提供了直观而强大的图形界面，给MySQL 或 MariaDB 新手以及专业人士提供了一组全面的工具。</p><p>Navicat for MySQL 可连接到任何本机或远程 MySQL 和 MariaDB 服务器。它可以用于 MySQL 数据库服务器版本3.21或以上和MariaDB 5.1或以上，与 Drizzle、OurDelta 和 Percona Server 兼容，并支持大部分最新功能，包括表、视图、函数或过程、事件等。</p><p>主要功能包括SQL创建工具或编辑器、数据模型工具、数据传输、导入或导出、数据或结构同步、报表、以及更多。</p><h2 id="Navicat-Premium"><a href="#Navicat-Premium" class="headerlink" title="Navicat Premium"></a>Navicat Premium</h2><p>Navicat Premium是一套数据库管理工具，结合了其它 Navicat 成员的功能，支持单一程序同時连接多达7种数据库，分别是：MySQL、MariaDB、SQL Server、SQLite、Oracle、MongoDB和PostgreSQL 数据库。Navicat Premium 可满足现今数据库管理系统的使用功能，包括存储过程、事件、触发器、函数、视图等。</p><p>Navicat Premium 支持快速地在各种数据库系统间传输数据，传输指定 SQL 格式以及编码的纯文本文件。执行不同数据库的批处理作业并在指定的时间运行。其他功能包括导入向导、导出向导、查询创建工具、报表创建工具、数据同步、备份、工作计划及更多。</p><p>Navicat 的功能不仅符合专业开发人员的所有需求，对数据库服务器的新手来说学习起来也相当容易。</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>1.下载</p><p>Navicat for MySQL 16的下载地址（含注册机）</p><p>链接：<a href="https://pan.baidu.com/s/11UJUcr13_A9MDeZqB-Vm5Q">https://pan.baidu.com/s/11UJUcr13_A9MDeZqB-Vm5Q</a><br>提取码：Juli</p><p>Navicat Premium 15的下载地址（含注册机）</p><p>链接：<a href="https://pan.baidu.com/s/1fLD7r4uS_Z_V91KF-rdXyA">https://pan.baidu.com/s/1fLD7r4uS_Z_V91KF-rdXyA</a><br>提取码：Juli</p><p>2.解压</p><p>将压缩包解压，navicat61_mysql_cs_x64.exe是Navicat安装程序，NavicatCracker.exe是注册机</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080335275.png" alt="image-20230208015511926"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote><p>Navicat Premium 的安装激活过程和 Navicat for MySQL是一样的，这里演示的是 Navicat for MySQL</p><p>的安装激活过程</p><p><code>注意：安装程序和激活过程要断开网络连接，否次可能激活出错。</code></p></blockquote><p>1.断开网络连接（重要）</p><p>2.双击安装程序.exe开始安装，下一步</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080333843.png" alt="image-20230208015557603"></p><p>3.同意条款，勾选同意，下一步</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080333859.png" alt="image-20230208015616047"></p><p>3.选择安装位置，下一步</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080333942.png" alt="image-20230208015835180"></p><p>4.创建桌面图标，下一步</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080333892.png" alt="image-20230208015847828"></p><p>5.准备安装，下一步</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080333779.png" alt="image-20230208015859374"></p><p>6.安装完成，先不要打开</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080333390.png" alt="image-20230208015916913"></p><h1 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h1><p>1.选择注册机.exe右键选择以管理员身份运行</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080334782.png" alt="image-20230208020042280"></p><p>2.获取私钥，Applied Path选择程序安装的目录，点击Patch，在弹窗中点击“是”</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080334147.png" alt="image-20230208020329658"></p><p>3.运行Navicat，帮助-&gt;注册</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080334130.png" alt="image-20230208030940336"></p><p>4.勾选HOSTS，RAS Key，Production选择MySQL，点击Generate按钮，生成KeyGen，将这个Keyen填写到许可证</p><p>，点击激活</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080334885.png" alt="image-20230208020710076"></p><p>5.如出现下图错误，查看下方的解决方法</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080334699.png" alt="image-20230208021937132"></p><p>6.如出现激活服务器暂时不可用，点击手动激活</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080334767.png" alt="image-20230208023235953"></p><p>7.将请求码复制到Request Code，嗲及Generate Activation Code生成Activation Code,复制到激活码框中，点击激活</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080334869.png" alt="image-20230208023745229"></p><p>8.出现下面的弹窗则激活成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080334542.png" alt="image-20230208023833262"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080335349.png" alt="image-20230208023916470"></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>1.如果出现下面这个错误，是因为没有断开网络。</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302080334095.png" alt="image-20230208032021373"></p><p>解决方法：</p><p>①先把原先的安装程序卸掉（如果原先有安装）；</p><p>②断掉网络；</p><p>③重新安装Navicat，先不启动；</p><p>④用Navicat，注册机解密激活；</p><p>2.彻底卸载Navicat</p><p>①通过uninstall.exe卸载或者控制面板卸载</p><p>②删除无用文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\PremiumSoft\Navicat...</span><br><span class="line">C:\Users\用户名\Documents\Navicat</span><br></pre></td></tr></table></figure><p>③删除注册表</p><p>通过win+r,输入regedit打开注册表，找到：计算机\HKEY_CURRENT_USER\SoftWare\PremiumSoft</p><p>将PremiumSoft全部删除</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> MySQL </tag>
            
            <tag> Navicat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js 的安装与配置</title>
      <link href="/posts/c87f83c2.html"/>
      <url>/posts/c87f83c2.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237647.png" alt="image-20230206074352715"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Node.js是JavaScript语言的<strong>服务器运行环境</strong></p><ul><li>Node.js 就是运行在服务端的 JavaScript。</li><li>Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。</li><li>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</li></ul><p>JavaScript语言本身是完善的函数式语言，在前端开发时，开发人员往往写得比较随意，让人感觉JavaScript就是个“玩具语言”。无法像其他编程语言一样满足工程的需要。</p><p>但是，在Node环境下，通过模块化的JavaScript代码，加上函数式编程，并且无需考虑浏览器兼容性问题，直接使用最新的ECMAScript 6标准，可以完全满足工程上的需求。</p><p>Node.js 适合以下场景:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.实时性应用，比如在线多人协作工具，网页聊天应用等。</span><br><span class="line">2.以 I/O 为主的高并发应用，比如为客户端提供 API，读取数据库。</span><br><span class="line">3.流式应用，比如客户端经常上传文件。</span><br><span class="line">4.前后端分离。</span><br></pre></td></tr></table></figure><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>1.下载</p><p>官网地址：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><p>历史版本：<a href="https://nodejs.org/en/download/releases/">https://nodejs.org/en/download/releases/</a></p><blockquote><p>这里提供了三个版本：12，14，18</p></blockquote><p>网盘链接：<a href="https://pan.baidu.com/s/12V8mlaTyMqfV3bZNuOi6Bw">https://pan.baidu.com/s/12V8mlaTyMqfV3bZNuOi6Bw</a><br>提取码：Juli</p><p>2.解压</p><p>解压后得到下图的文件，选择适合自己的版本，建议不要选太高的版本</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237592.png" alt="image-20230207222604530"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>1.双击下载的msi文件进行安装，一直下一步即可</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237649.png" alt="1675294650806"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237926.png" alt="1675294672462"></p><p>更改安装路径（可不改）</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237806.png" alt="1675294786781"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237839.png" alt="1675294800869"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237769.png" alt="1675294856219"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237437.png" alt="1675294878908"></p><p>2.验证是否安装成功</p><p>命令行输入以下指令，若返回版本号说明安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v </span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237260.png" alt="1675294967124"></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="修改全局模块下载路径"><a href="#修改全局模块下载路径" class="headerlink" title="修改全局模块下载路径"></a>修改全局模块下载路径</h2><blockquote><p>全局的仓库是安装在c盘下的，可以通过 <strong>npm list -global</strong> 命令查看；所以当你们使用 npm 安装全局模块的时候会安装到c盘下面的文件夹，这会使得你们c盘数据庞大，所以我们便可以修改默认存储地址</p></blockquote><p>1.在你安装node的文件夹下新建两个文件夹；node_cache(缓存文件夹)node_global(全局仓库文件夹)</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237519.png" alt="1675295401173"></p><p>2.在命名行输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;NodeRoot\node_global&quot;</span>    <span class="comment"># NodeRoot为你安装node的路径</span></span><br><span class="line">npm config <span class="built_in">set</span> cache <span class="string">&quot;NodeRoot\node_cache&quot;</span>      <span class="comment"># NodeRoot为你安装node的路径</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237995.png" alt="1675295570422"></p><p>3.测试</p><p>命令行输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm list -global</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237346.png" alt="1675295761306"></p><p>测试安装webpack</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack -g</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237434.png" alt="1675295952641"></p><p>webpack成功安装在node_global目录下</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072237533.png" alt="1675296006847"></p><p>全局仓库地址和缓存地址就已经修改完成</p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>1.修改用户变量的path为全局仓库地址</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072238134.png" alt="1675296935919"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072238784.png" alt="1675297048152"></p><p>2.新建系统变量NODE_PATH，变量值为node_global下的node_modules目录的路径</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072238723.png" alt="1675302218290"></p><p>3.编辑系统变量的path,添加node.js的安装路径</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072239927.png" alt="1675302144234"></p><p>4.测试</p><p>安装express</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express -g  <span class="comment"># -g是全局安装的意思，不加 -g 就是默认下载到当前目录</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072239234.png" alt="1675298503633"></p><p>下载的express模块成功下载到全局的指定目录</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072238354.png" alt="1675298519699"></p><h2 id="更换npm源为淘宝镜像"><a href="#更换npm源为淘宝镜像" class="headerlink" title="更换npm源为淘宝镜像"></a>更换npm源为淘宝镜像</h2><p>1.查看初始npm源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072238374.png" alt="1675297884185"></p><p>说明npm 默认的 registry ,也就是下载 npm 包时是从国外的服务器下载，国内很慢，一般都会指向淘宝</p><p>2.更换镜像为淘宝镜像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072238687.png" alt="1675297993657"></p><p>3.查看配置是否成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072238375.png" alt="1675298013292"></p><p>可以看到当前镜像源是淘宝镜像</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PicGo+Github+Typora搭建个人图床</title>
      <link href="/posts/d3242b67.html"/>
      <url>/posts/d3242b67.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041508237.png" alt="image-20230204150818836"></p><h1 id="使用PicGo-Github-Typora搭建个人图床"><a href="#使用PicGo-Github-Typora搭建个人图床" class="headerlink" title="使用PicGo+Github+Typora搭建个人图床"></a>使用PicGo+Github+Typora搭建个人图床</h1><h2 id="安装PicGo"><a href="#安装PicGo" class="headerlink" title="安装PicGo"></a>安装PicGo</h2><blockquote><p>选择下载bate.5版本 Windows版本64为位,太高的版本可能安装不了插件</p></blockquote><ul><li>PicGo的下载地址 <a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.1">2.31-Beta.5</a></li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302031945330.png" alt="image-20230203185556859"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302031948411.png" alt="image-20230203185634475"></p><ul><li>双击下载的exe进行安装，一直下一步即可</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302031949907.png" alt="image-20230203194834395"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302031949645.png" alt="1675397318738"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032016533.png" alt="1675397354646"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032016908.png" alt="1675397392085"></p><ul><li>安装完成之后打开的界面</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032017708.png" alt="image-20230203185725959"></p><h2 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h2><ul><li>创建新的创建，用于存储picgo上传的图片，点击头像旁边的“+”号，选择New repository</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032017274.png" alt="image-20230203185821746"></p><ul><li>填写创建的仓库名</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032017498.png" alt="image-20230203185915912"></p><ul><li>选择仓库为public和生成readme.md文件，点击Greate License完成创建</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032017084.png" alt="image-20230203190139782"></p><ul><li>创建的仓库</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032017491.png" alt="image-20230203190241966"></p><h2 id="获取Github的token令牌"><a href="#获取Github的token令牌" class="headerlink" title="获取Github的token令牌"></a>获取Github的token令牌</h2><ul><li>点击头像，选择settings</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032017612.png" alt="image-20230203190315063"></p><ul><li>选择左下角的Developer settings</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032017481.png" alt="image-20230203190348102"></p><ul><li>选择Token（classic）,点击Greate new token</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032017988.png" alt="image-20230203190455881"></p><ul><li>生成经典的token即可</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032017579.png" alt="image-20230203190547602"></p><ul><li>填写token名称</li><li>选择token永不过期，不设置过期之后就得生成新的token</li></ul><p><strong><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032018167.png" alt="image-20230203190714384"></strong></p><ul><li>生成的token，复制下来</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032018849.png" alt="image-20230203190733781"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">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</span><br></pre></td></tr></table></figure><h2 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h2><ul><li>配置上传图片的地址</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032018802.png" alt="image-20230203191250749"></p><p>参数说明：</p><div class="table-container"><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>仓库名</td><td>上传图片的仓库，格式为：Github用户名/仓库名</td></tr><tr><td>分支名</td><td>选择保存图片的分支，从2020.10.01开始，github的默认分支名变更为main</td></tr><tr><td>Token</td><td>Github生成的令牌</td></tr><tr><td>指定存储路径</td><td>设置图片的存储路径，不设置默认图片存储在img文件夹下</td></tr><tr><td>自定义域名</td><td>图片的访问路径</td></tr></tbody></table></div><p>注意：</p><p>1.分支名要填main，从2020.10.01开始，github的默认分支名变更为main，如果不填main图片可能会保存失败</p><p>2.自定义域名可使用staticaly的sdn加速，格式为：<a href="https://cdn.staticaly.com/gh/Github用户名/仓库名@main">https://cdn.staticaly.com/gh/Github用户名/仓库名@main</a></p><p>  如：<a href="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main">https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main</a></p><ul><li>设置日志文件</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032023488.png" alt="image-20230203202232580"></p><ul><li>设置时间戳命名</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032024305.png" alt="image-20230203202338060"></p><ul><li>测试：</li></ul><p>选择一张图片上传</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032018147.png" alt="image-20230203200922430"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032018825.png" alt="image-20230203193457459"></p><p>在相册中可以查看到上传的图片</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032018889.png" alt="image-20230203193611157"></p><p>复制图片地址到浏览器打开</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032018331.png" alt="image-20230203193727754"></p><p>经过如上配置，图床已经搭建成功，可以通过上传图片测试</p><h2 id="配置Typora"><a href="#配置Typora" class="headerlink" title="配置Typora"></a>配置Typora</h2><ul><li>点击选项卡的文件，选择偏好设置</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032019512.png" alt="image-20230203193948646"></p><ul><li><p>点击图像，配置上传服务设置</p><p>上传服务选择PicGo(app)</p><p>PicGo路径为安装目录下的PicGo.exe</p></li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032019266.png" alt="image-20230203194131676"></p><ul><li>点击验证图片上传选项，typora会进行图片上传的测试</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032019185.png" alt="image-20230203194206276"></p><ul><li>测试成功之后，图片保存到仓库中</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032019985.png" alt="image-20230203194227573"></p><ul><li>选择所要上传的图片，右键，点击上传图片，图片就会上传到Github仓库</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032019327.png" alt="image-20230203194331558"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032020976.png" alt="image-20230203194414551"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302032020586.png" alt="image-20230203194444966"></p>]]></content>
      
      
      <categories>
          
          <category> Data </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> PicGo </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLyog 的安装与激活</title>
      <link href="/posts/1082146e.html"/>
      <url>/posts/1082146e.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081349874.png" alt="image-20230206074352715"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>SQLyog 是一个快速而简洁的图形化管理 MySQL 数据库的工具，它能够在任何地点有效地管理你的数据库，由业界著名的Webyog公司出品。</p><p>使用 SQLyog 可以快速直观地让您从世界的任何角落通过网络来维护远端的 MySQL 数据库。</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>1.下载</p><p>链接：<a href="https://pan.baidu.com/s/1Q5V-UJlVCOIc_n6O7VwwyA">https://pan.baidu.com/s/1Q5V-UJlVCOIc_n6O7VwwyA</a><br>提取码：Juli</p><p>2.解压</p><p>解压完成得到</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081412402.png" alt="image-20230208135444476"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>1.选择解压包中的.exe文件右键以管理员运行进行安装</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411002.png" alt="image-20230208135643627"></p><p>2.选择软件的语言</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411908.png" alt="image-20230208135713569" style="zoom:50%;" /></p><p>3.下一步</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411593.png" alt="image-20230208135823692" style="zoom:50%;" /></p><p>4.勾选接收许可证协议条款</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411437.png" alt="image-20230208135904511" style="zoom:50%;" /></p><p>5.选择组件</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411860.png" alt="image-20230208135950351" style="zoom:50%;" /></p><p>6.选择程序安装的位置</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411989.png" alt="image-20230208140022191" style="zoom:50%;" /></p><p>7.选择UI界面的语言</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411770.png" alt="image-20230208140107151" style="zoom:67%;" /></p><h1 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h1><p>1.注册SQLyog</p><p>安装完成注册SQLyog后，打开SQLyog，帮助-&gt;注册</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411105.png" alt="image-20230208140143509" style="zoom:50%;" /></p><p>打开刚刚解压后的文件夹，有一个文件中有名称和证书，复制一个粘贴就好了</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411530.png" alt="image-20230208140221653"></p><p>9.注册成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081411177.png" alt="image-20230208140244127" style="zoom: 67%;" /></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>1.创建连接</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081410275.png" alt="image-20230208140749435"></p><p>2.测试连接</p><p>填写MySQL数据库的信息，点击测试连接</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081410709.png" alt="image-20230208140830621" style="zoom:67%;" /></p><p>3.连接数据库</p><p>测试连接成功后，点击连接</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081410642.png" alt="image-20230208140934347" style="zoom:67%;" /></p><p>4.成功连接到数据库</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081410706.png" alt="image-20230208141022091" style="zoom:67%;" /></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> MySQL </tag>
            
            <tag> SQLyog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 SwitchHosts 加速 Github</title>
      <link href="/posts/b9c297bd.html"/>
      <url>/posts/b9c297bd.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070025418.png" alt="image-20230206074352715"></p><p>​    SwitchHosts是一款windows平台下用来快速切换本机HOST文件的小工具跨平台支持 Windows、macOS 和 Linux 系统。操作简单,无需安装,点开即用。本程序用于在多个HOSTS之间进行切换。可在公用hosts文件、当前系统hosts、本地方案和在线方案间进行切换。</p><h1 id="SwitchHosts-的下载"><a href="#SwitchHosts-的下载" class="headerlink" title="SwitchHosts 的下载"></a>SwitchHosts 的下载</h1><blockquote><p>这里下载的版本是Windows64位</p></blockquote><p>下载地址：<a href="https://github.com/oldj/SwitchHosts/releases">https://github.com/oldj/SwitchHosts/releases</a></p><p>选择合适的版本进行下载</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070025257.png" alt="image-20230207000232795"  /></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070025953.png" alt="image-20230207000317179"></p><h1 id="SwitchHosts-的安装"><a href="#SwitchHosts-的安装" class="headerlink" title="SwitchHosts 的安装"></a>SwitchHosts 的安装</h1><p>双击下载的.exe文件进行安装，一直下一步即可</p><h1 id="SwitchHosts-的配置"><a href="#SwitchHosts-的配置" class="headerlink" title="SwitchHosts 的配置"></a>SwitchHosts 的配置</h1><h2 id="设置定时同步云端最新hosts"><a href="#设置定时同步云端最新hosts" class="headerlink" title="设置定时同步云端最新hosts"></a>设置定时同步云端最新hosts</h2><p>1.点击左上角的”+”号，新增一条远程规则</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070025139.png" alt="image-20230207000912245"></p><p>2.填写配置信息</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070025571.png" alt="image-20230207001215569"></p><p>3.开启</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070025272.png" alt="image-20230207001348395"  /></p><p>4.当点击标题左边的开启按钮，会提示“没有写入hosts文件的权限”</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070026465.png" alt="image-20230207001621278"></p><h2 id="修改hosts文件的权限"><a href="#修改hosts文件的权限" class="headerlink" title="修改hosts文件的权限"></a>修改hosts文件的权限</h2><p>1.打开如下路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070026746.png" alt="image-20230207001832450"></p><p>2.修改hosts文件的权限，右键 hosts 文件 -&gt; 点击属性 -&gt; 去掉 属性的只读 勾选，</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070026167.png" alt="image-20230207001938463"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070026585.png" alt="image-20230207002231341"></p><p>3.点击安全 -&gt; 点击编辑 -&gt; 找到Users 和自己的用户名，勾选完全控制</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070026817.png" alt="image-20230207002341219"></p><p>SwitchHosts 的开启按钮就可以启动了</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070026394.png" alt="image-20230207002421184"></p>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> 加速 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora 的安装与激活</title>
      <link href="/posts/4d6b53c8.html"/>
      <url>/posts/4d6b53c8.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041549994.png" alt="image-20230204150818836"></p><h1 id="Typora的介绍"><a href="#Typora的介绍" class="headerlink" title="Typora的介绍"></a>Typora的介绍</h1><p>跨平台轻量级 Markdown 编辑器</p><ul><li>支持实时预览</li><li>优秀的文档编辑功能</li><li>图片插入方便</li><li>良好的版本控制</li></ul><h1 id="下载解压"><a href="#下载解压" class="headerlink" title="下载解压"></a>下载解压</h1><blockquote><p>这里Typora版本为1.2.4，Windows 64位</p></blockquote><p>网盘链接：<a href="https://pan.baidu.com/s/17f4-VQHdlvk5lblG67Kq1A">https://pan.baidu.com/s/17f4-VQHdlvk5lblG67Kq1A</a>   提取码：Juli</p><p>1.从网盘下载文件压缩包</p><p>2.将zip文件解压到typora1.2.4-Windows目录</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041541886.png" alt="image-20230203145054735"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>双击解压文件夹中的typora-setup-x64-1.2.4.exe进行安装，一直下一步即可，程序安装路径可根据自己需求自行更改</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041541678.png" alt="image-20230203145305285"></p><h1 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h1><p>1.将解压文件夹中的app.asar文件复制到安装目录下的resources目录，替换到原来的app.asar</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041541738.png" alt="image-20230203145418577"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041541909.png" alt="image-20230203145646643"></p><p>2.重启Typora，查看许可证</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041541435.png" alt="image-20230204153830425"></p><p>出现以下界面则激活成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041541639.png" alt="image-20230203145738346"></p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 10 安装 JDK 并配置环境变量</title>
      <link href="/posts/9aeb905a.html"/>
      <url>/posts/9aeb905a.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081349779.png" alt="image-20230206074352715"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>JDK 是 Java 语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序。JDK是整个java开发的核心，它包含了JAVA的运行环境（JVM+Java系统类库）和JAVA工具。</p><p>没有JDK的话，无法编译Java程序（指java源码.java文件），如果想只运行Java程序（指class或jar或其它归档文件），要确保已安装相应的JRE。</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>1.官网下载</p><p>官方下载地址：<a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a></p><p>选择安装的版本下载即可</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081531015.png" alt="image-20230208143855235"></p><p>2.网盘下载</p><blockquote><p>网盘中包含了JDK8，JDK11，JDK15，JDK17</p></blockquote><p>JDK8链接：<a href="https://pan.baidu.com/s/1NTJLNpl7-M0EbU8pZQYCVg">https://pan.baidu.com/s/1NTJLNpl7-M0EbU8pZQYCVg</a><br>提取码：Juli</p><p>JDK11链接：<a href="https://pan.baidu.com/s/1uVsMMmQGHgEcle6cKFgTFQ">https://pan.baidu.com/s/1uVsMMmQGHgEcle6cKFgTFQ</a><br>提取码：Juli</p><p>JDK15链接：<a href="https://pan.baidu.com/s/1LF7DNehFZ2AsJEuXZVB24g">https://pan.baidu.com/s/1LF7DNehFZ2AsJEuXZVB24g</a><br>提取码：Juli</p><p>JDK17链接：<a href="https://pan.baidu.com/s/1MxvaLgVS6cc2RdyPSdnFfQ">https://pan.baidu.com/s/1MxvaLgVS6cc2RdyPSdnFfQ</a><br>提取码：Juli</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>1.运行.exe文件</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081531996.png" alt="image-20230208144258919" style="zoom: 67%;" /></p><p>2.选择JDK安装的路径，一般默认即可</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081531729.png" alt="image-20230208144510571" style="zoom: 67%;" /></p><p>3.JDK安装完成后，继续安装JRE</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081531514.png" alt="image-20230208144705002" style="zoom:67%;" /></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081531129.png" alt="image-20230208144730069" style="zoom:67%;" /></p><p>4.安装完成</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081531704.png" alt="image-20230208144757504" style="zoom:67%;" /></p><h1 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h1><p>1.打开环境变量窗口</p><p>右键此电脑-&gt;属性-&gt;高级环境变量-&gt;环境变量</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081531050.png" alt="image-20230208150036029" style="zoom:67%;" /></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081531500.png" alt="image-20230208145949954"></p><p>2.新增JAVA_HOME变量</p><p>点击系统变量的新建按钮</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081531609.png" alt="image-20230208150240702" style="zoom: 67%;" /></p><p>添加变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">变量名：JAVA_HOME</span><br><span class="line">变量值：电脑上JDK安装的绝对路径</span><br></pre></td></tr></table></figure><p>输入完成后，点击确定</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081530172.png" alt="image-20230208150442999" style="zoom:67%;" /></p><p>3.新建或修改CLASSPATH变量</p><p>如果存在 <strong>CLASSPATH</strong> 变量，选中点击 <strong>编辑</strong>；如果没有，点击 <strong>新建</strong> 。</p><p>输入/在已有的变量值后面添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">变量名：CLASSPATH</span><br><span class="line">变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081530959.png" alt="image-20230208151213189" style="zoom:67%;" /></p><p>4.修改path变量</p><p>在变量后面添加,主要用“;”隔开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%JAVA_HOME%\bin</span><br><span class="line">%JAVA_HOME%\jre\bin</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081530485.png" alt="image-20230208151305887" style="zoom:67%;" /></p><p>5.检查环境变量是否配置成功</p><p>命令行输入以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>如出现JDK的版本号，即配置成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081530528.png" alt="image-20230208152330888"></p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> JDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装教程汇总</title>
      <link href="/posts/1a1cc025.html"/>
      <url>/posts/1a1cc025.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302081349779.png" alt="image-20230206074352715"></p><div class="tag link"><a class="link-card" title="Cmder 安装与配置" href="https://blog.julissa.cn/posts/eb9d652e.html"><div class="left"><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302050205806.png"/></div><div class="right"><p class="text">Cmder 安装与配置</p><p class="url">https://blog.julissa.cn/posts/eb9d652e.html</p></div></a></div><div class="tag link"><a class="link-card" title="Windows 10 安装 JDK 并配置环境变量" href="https://blog.julissa.cn/posts/9aeb905a.html"><div class="left"><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302050205806.png"/></div><div class="right"><p class="text">Windows 10 安装 JDK 并配置环境变量</p><p class="url">https://blog.julissa.cn/posts/9aeb905a.html</p></div></a></div><div class="tag link"><a class="link-card" title="Typora 的安装与激活" href="https://blog.julissa.cn/posts/4d6b53c8.html"><div class="left"><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302050205806.png"/></div><div class="right"><p class="text">Typora 的安装与激活</p><p class="url">https://blog.julissa.cn/posts/4d6b53c8.html</p></div></a></div><div class="tag link"><a class="link-card" title="node.js 的安装与配置" href="https://blog.julissa.cn/posts/c87f83c2.html"><div class="left"><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302050205806.png"/></div><div class="right"><p class="text">node.js 的安装与配置</p><p class="url">https://blog.julissa.cn/posts/c87f83c2.html</p></div></a></div><div class="tag link"><a class="link-card" title="Navicat 16 for MySQL 的安装与激活" href="https://blog.julissa.cn/posts/ddd9e8d2.html"><div class="left"><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302050205806.png"/></div><div class="right"><p class="text">Navicat 16 for MySQL 的安装与激活</p><p class="url">https://blog.julissa.cn/posts/ddd9e8d2.html</p></div></a></div><div class="tag link"><a class="link-card" title="MySQL 的安装与配置" href="https://blog.julissa.cn/posts/bd12b444.html"><div class="left"><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302050205806.png"/></div><div class="right"><p class="text">MySQL 的安装与配置</p><p class="url">https://blog.julissa.cn/posts/bd12b444.html</p></div></a></div><div class="tag link"><a class="link-card" title="IntelliJ IDEA 2022 的安装与激活" href="https://blog.julissa.cn/posts/c12e0e07.html"><div class="left"><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302050205806.png"/></div><div class="right"><p class="text">IntelliJ IDEA 2022 的安装与激活</p><p class="url">https://blog.julissa.cn/posts/c12e0e07.html</p></div></a></div><div class="tag link"><a class="link-card" title="SQLyog 的安装与激活" href="https://blog.julissa.cn/posts/1082146e.html"><div class="left"><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302050205806.png"/></div><div class="right"><p class="text">SQLyog 的安装与激活</p><p class="url">https://blog.julissa.cn/posts/1082146e.html</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Buffterfly 哔哩哔哩番剧插件</title>
      <link href="/posts/3275f8e8.html"/>
      <url>/posts/3275f8e8.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071017508.png" alt="image-20230206074352715"></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>为 Hexo 添加哔哩哔哩/Bangumi追番/追剧页面</p><p>效果演示：</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071017186.png" alt="image-20230207101237878"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>1.安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-bilibili-bangumi --save</span><br></pre></td></tr></table></figure><p>2.更新依赖库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-bilibili-bangumi --update --save</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>1.修改站点配置文件_config.yml，添加如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bangumi:</span> <span class="comment"># 追番设置</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">source:</span> <span class="string">bili</span></span><br><span class="line">  <span class="attr">bgmInfoSource:</span> <span class="string">&#x27;bgmApi&#x27;</span></span><br><span class="line">  <span class="attr">path:</span></span><br><span class="line">  <span class="attr">vmid:</span> <span class="number">275717240</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&#x27;追番列表&#x27;</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="string">&#x27;生命不息，追番不止！&#x27;</span></span><br><span class="line">  <span class="attr">show:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">srcValue:</span> <span class="string">&#x27;__image__&#x27;</span></span><br><span class="line">  <span class="attr">lazyloadAttrName:</span> <span class="string">&#x27;data-src=__image__&#x27;</span></span><br><span class="line">  <span class="attr">loading:</span></span><br><span class="line">  <span class="attr">showMyComment:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">pagination:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">metaColor:</span></span><br><span class="line">  <span class="attr">color:</span></span><br><span class="line">  <span class="attr">webp:</span></span><br><span class="line">  <span class="attr">progress:</span></span><br><span class="line">  <span class="attr">extraOrder:</span></span><br><span class="line">  <span class="attr">proxy:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">&#x27;代理host&#x27;</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&#x27;代理端口&#x27;</span></span><br><span class="line">  <span class="attr">extra_options:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">value</span></span><br><span class="line"><span class="attr">cinema:</span> <span class="comment"># 追剧设置</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span></span><br><span class="line">  <span class="attr">vmid:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">&#x27;追剧列表&#x27;</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="string">&#x27;生命不息，追剧不止！&#x27;</span></span><br><span class="line">  <span class="attr">show:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">srcValue:</span> <span class="string">&#x27;__image__&#x27;</span></span><br><span class="line">  <span class="attr">lazyloadAttrName:</span> <span class="string">&#x27;data-src=__image__&#x27;</span></span><br><span class="line">  <span class="attr">loading:</span></span><br><span class="line">  <span class="attr">metaColor:</span></span><br><span class="line">  <span class="attr">color:</span></span><br><span class="line">  <span class="attr">webp:</span></span><br><span class="line">  <span class="attr">progress:</span></span><br><span class="line">  <span class="attr">extraOrder:</span></span><br><span class="line">  <span class="attr">extra_options:</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">value</span></span><br></pre></td></tr></table></figure><p>2.修改vmid为自己的uid</p><p>uid获取方法：登录哔哩哔哩后前往<a href="https://space.bilibili.com/页面，网址最后的一串数字就是">https://space.bilibili.com/页面，网址最后的一串数字就是</a> <code>uid</code></p><p><img src="E:\初稿\assets\image-20230207100355522.png" alt="image-20230207100355522"></p><p>3.修改公开我的追番</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071022018.png" alt="image-20230207102204809"></p><p>3.修改lazyload是否启用图片懒加载，如果与主题的懒加载冲突请关闭，默认true</p><p>参数说明：</p><ul><li><strong>enable</strong>: 是否启用</li><li><strong>source</strong>: 数据源，仅支持追番，追剧仅支持哔哩哔哩源。<code>bili</code>: <a href="https://www.bilibili.com/">哔哩哔哩源</a>, <code>bgm</code>: <a href="https://bangumi.tv/">Bangumi源</a></li><li><strong>bgmInfoApi</strong>: 获取Bangumi番剧信息时使用的Api，仅使用Bangumi源时此选项生效。<code>bgmApi</code>: <a href="https://github.com/bangumi/api/">Bangumi Api</a>, <code>bgmSub</code>: <a href="https://github.com/czy0729/Bangumi-Subject">Bangumi-Subject</a></li><li><strong>proxy</strong>: 代理设置，仅在使用支持<code>bgm</code>源追番时生效。默认<code>false</code></li><li><strong>path</strong>: 页面路径，默认<code>bangumis/index.html</code>, <code>cinemas/index.html</code></li><li><strong>vmid</strong>: 哔哩哔哩的 <code>vmid(uid)</code><a href="https://github.com/HCLonely/hexo-bilibili-bangumi#获取-bilibili-uid">如何获取？</a>或Bangumi的用户<code>id</code><a href="https://github.com/HCLonely/hexo-bilibili-bangumi#获取-bangumi-id">如何获取？</a></li><li><strong>title</strong>: 该页面的标题</li><li><strong>quote</strong>: 写在页面开头的一段话，支持 html 语法，可留空。</li><li><strong>show</strong>: 初始显示页面：<code>0: 想看</code>, <code>1: 在看</code>, <code>2: 看过</code>，默认为<code>1</code></li><li><strong>lazyload</strong>: 是否启用图片懒加载，如果与主题的懒加载冲突请关闭，默认<code>true</code></li><li><strong>srcValue</strong>: 设置封面图的默认<code>src</code>值, <code>__image__</code>为封面链接, <code>__loading__</code>为loading图片链接, <code>lazyload</code>选项为<code>false</code>时此选项生效</li><li><strong>lazyloadAttrName</strong>: 设置封面图的属性与属性值, 例<code>lazyloadAttrName: &#39;data-src=__image__&#39;</code>代表为<code>img</code>元素添加<code>data-src</code>属性, 其值为图片链接, <code>lazyload</code>选项为<code>false</code>时此选项生效</li><li><strong>loading</strong>: 图片加载完成前的 loading 图片，需启用图片懒加载</li><li><strong>metaColor</strong>: meta 部分(简介上方)字体颜色</li><li><strong>color</strong>: 简介字体颜色</li><li><strong>webp</strong>: 番剧封面使用<code>webp</code>格式(此格式在<code>safari</code>浏览器下不显示，但是图片大小可以缩小 100 倍左右，仅支持哔哩哔哩源), 默认<code>true</code></li><li><strong>progress</strong>: 获取番剧数据时是否显示进度条，默认<code>true</code></li><li><strong>extraOrder</strong>: 手动添加的番剧/追剧数据是否优先显示，<code>1</code>为优先，其它为不优先</li><li><strong>showMyComment</strong>: 使用<code>bgm</code>源时显示自己的评价及评论，默认<code>false</code></li><li><strong>pagination</strong>: 分页优化，只将第一页的数据渲染到<code>html</code>文件中，其余数据将通过异步请求加载，避免番剧过多时html文件过大导致页面加载缓慢，建议番剧较多时使用，默认<code>false</code></li><li><strong>extra_options</strong>: 此配置会扩展到Hexo<code>page</code>变量中</li></ul><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ol><li>在<code>hexo generate</code>或<code>hexo deploy</code>之前使用<code>hexo bangumi -u</code>命令更新追番数据，使用<code>hexo cinema -u</code>命令更新追剧数据</li><li>删除数据命令:<code>hexo bangumi -d</code>/<code>hexo cinema -d</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 地址栏插件</title>
      <link href="/posts/49b590dc.html"/>
      <url>/posts/49b590dc.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071153008.png" alt="image-20230206074352715"></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>一个Hexo插件，可以根据标题和文章前面的数据生成静态文章链接。</p><p>演示效果：</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071153921.png" alt="image-20230207115331712"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>1.在站点根目录配置文件_config.yml添加以下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 地址插件</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>      <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">hex</span>        <span class="comment">#support dec(default) and hex</span></span><br><span class="line">  <span class="attr">drafts:</span> <span class="literal">false</span>   </span><br><span class="line">  <span class="attr">auto_category:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment">#true(default)</span></span><br><span class="line">    <span class="attr">depth:</span>        <span class="comment">#3(default)</span></span><br><span class="line">    <span class="attr">over_write:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">auto_title:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">auto_date:</span> <span class="literal">false</span> </span><br><span class="line">  <span class="attr">force:</span> <span class="literal">false</span> </span><br></pre></td></tr></table></figure><p>这里需要设置两个参数</p><ul><li>alg — 算法 (支持crc16和crc32,默认为crc16)</li><li>rep — 表示(生成的链接可以用十六进制或十进制表示，默认是十进制)</li></ul><p>2.在站点根目录配置文件_config.yml进行修改permalink</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://blog.julissa.cn/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span>           </span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span>       </span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span>            </span><br></pre></td></tr></table></figure><p>permalink的书写形式可以是</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span> </span><br><span class="line"><span class="comment"># or</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span></span><br></pre></td></tr></table></figure><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><p>Hexo三连</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 文章置顶插件</title>
      <link href="/posts/c6310338.html"/>
      <url>/posts/c6310338.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071417423.png" alt="image-20230206074352715"></p><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>使用hexo-butterfly-swiper插件为首页添加文章置顶功能</p><p>演示效果：</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071425105.png" alt="image-20230207142504322"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在博客根目录下打开终端，运行以下指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-swiper --save</span><br></pre></td></tr></table></figure><h1 id="添加配置信息"><a href="#添加配置信息" class="headerlink" title="添加配置信息"></a>添加配置信息</h1><p>在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-butterfly-swiper</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/8e1264d1/</span></span><br><span class="line"><span class="attr">swiper:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">timemode:</span> <span class="string">date</span> <span class="comment">#date/updated</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">default_descr:</span> <span class="string">再怎么看我也不知道怎么描述它的啦！</span></span><br><span class="line">  <span class="attr">swiper_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.css</span> <span class="comment">#swiper css依赖</span></span><br><span class="line">  <span class="attr">swiper_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper.min.js</span> <span class="comment">#swiper js依赖</span></span><br><span class="line">  <span class="attr">custom_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiperstyle.css</span> <span class="comment"># 适配主题样式补丁</span></span><br><span class="line">  <span class="attr">custom_js:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-swiper/lib/swiper_init.js</span> <span class="comment"># swiper初始化方法</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><div class="table-container"><table><thead><tr><th>参数</th><th>备选值/类型</th><th>释义</th></tr></thead><tbody><tr><td>priority</td><td>number</td><td>【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td>enable</td><td>true/false</td><td>【必选】控制开关</td></tr><tr><td>enable_page</td><td>path/all</td><td>【可选】填写想要应用的页面的相对路径（即路由地址）,如根目录就填’/‘,分类页面就填’/categories/‘。若要应用于所有页面，就填’all’，默认为all</td></tr><tr><td>exclude</td><td>path</td><td>【可选】填写想要屏蔽的页面，可以多个。仅当enable_page为’all’时生效。写法见示例。原理是将屏蔽项的内容逐个放到当前路径去匹配，若当前路径包含任一屏蔽项，则不会挂载。</td></tr><tr><td>timemode</td><td>date/updated</td><td>【可选】时间显示，date为显示创建日期，updated为显示更新日期,默认为date</td></tr><tr><td>layout.type</td><td>id/class</td><td>【可选】挂载容器类型，填写id或class，不填则默认为id</td></tr><tr><td>layout.name</td><td>text</td><td>【必选】挂载容器名称</td></tr><tr><td>layout.index</td><td>0和正整数</td><td>【可选】前提是layout.type为class，因为同一页面可能有多个class，此项用来确认究竟排在第几个顺位</td></tr><tr><td>error_img</td><td>url</td><td>封面图片加载失败时的替换图片</td></tr><tr><td>insertposition</td><td>text</td><td>‘beforebegin’：元素自身的前面。’afterbegin’：插入元素内部的第一个子节点之前。’beforeend’：插入元素内部的最后一个子节点之后。’afterend’：插入元素自身的后面。</td></tr><tr><td>default_descr</td><td>text</td><td>【可选】默认文章描述</td></tr><tr><td>swiper_css</td><td>url</td><td>【可选】自定义的swiper依赖项css链接</td></tr><tr><td>swiper_js</td><td>url</td><td>【可选】自定义的swiper依赖项加js链接</td></tr><tr><td>custom_css</td><td>url</td><td>【可选】适配主题样式补丁</td></tr><tr><td>custom_js</td><td>url</td><td>【可选】swiper初始化方法</td></tr></tbody></table></div><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>在文章的<code>front_matter</code>中添加<code>swiper_index</code>配置项即可。</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 创建日期</span><br><span class="line">updated: 更新日期</span><br><span class="line">cover: 文章封面</span><br><span class="line">description: 文章描述</span><br><span class="line"><span class="section">swiper<span class="emphasis">_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前</span></span></span><br><span class="line"><span class="emphasis"><span class="section">---</span></span></span><br></pre></td></tr></table></figure><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><p>完成后保存修改，在Hexo根目录下运行指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp;hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cmder 安装与配置</title>
      <link href="/posts/eb9d652e.html"/>
      <url>/posts/eb9d652e.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072156752.png" alt="image-20230206074352715"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>cmder 是一个增强型命令行工具，不仅可以使用 windows 下的所有命令，还可以使用 linux 的命令,shell 命令。</p><p>全安装版 cmder 自带了 msysgit, 压缩包 23M, 除了 git 本身这个命令之外, 里面可以使用大量的 linux 命令；比如 grep, curl(没有 wget)； 像vim, grep, tar, unzip, ssh, ls, bash, perl 对于爱折腾的Coder更是痛点需求。</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>1.下载</p><p>Github的下载地址：<a href="https://github.com/cmderdev/cmder">https://github.com/cmderdev/cmder</a></p><blockquote><p>这里提供的版本为1.3.21</p></blockquote><p>网盘链接：<a href="https://pan.baidu.com/s/1cVa4CbtBgqqR8WfzrL7WMw">https://pan.baidu.com/s/1cVa4CbtBgqqR8WfzrL7WMw</a><br>提取码：Juli</p><p>2.解压</p><p>解压后得到下图的文件</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072156489.png" alt="image-20230207204611246"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>双击.exe文件进行安装</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155000.png" alt="image-20230207204931001"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072153478.png" alt="image-20230207204910957"></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>1.配置环境变量</p><p>在系统变量添加</p><ul><li>变量名： CMDER_HOME</li><li>变量值： 安装绝对路径</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155400.png" alt="image-20230207205604526"></p><p>编辑环境变量path，在后面加上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;%CMDER_HOME%</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155344.png" alt="image-20230207205753840"></p><p>2.添加 cmder 到右键菜单</p><p>在<strong>管理员权限</strong>的终端输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cmder.exe /REGISTER ALL</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155454.png" alt="image-20230207210111207"></p><p>配置后，任意文件夹右键Cmder Here，可以打开cmder控制台</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155711.png" alt="image-20230207210215236"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155985.png" alt="image-20230207210305249"></p><p>3.新标签打开个管理员权限终端，快捷键 Ctrl + t 后勾选</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155103.png" alt="image-20230207210755520"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155896.png" alt="image-20230207210813839"></p><p>4.设置bash作为默认开启的选项</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155610.png" alt="image-20230207211020988">    </p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155022.png" alt="image-20230207211115779"></p><p>4.解决中文乱码问题</p><p>在Environment添加以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> LANG=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">set</span> LC_ALL=zh_CN.utf8</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072155295.png" alt="image-20230207211514850"></p><p>5.设置背景图片</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072154767.png" alt="image-20230207212018082"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072154178.png" alt="image-20230207212051851"></p><p>6.设置中文</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072154295.png" alt="image-20230207212409747"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072154254.png" alt="image-20230207212429806"></p><p>7.修改提示符</p><p>修改安装目录下\config\cmder_prompt_config.lua文件</p><p><img src="E:\初稿\assets\image-20230207214841140.png" alt="image-20230207214841140"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302072154239.png" alt="image-20230207214901184"></p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>1.Cmder常用快捷键</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- 利用Tab，自动路径补全；</span><br><span class="line">- 利用Ctrl+T建立新页签；利用Ctrl+W关闭页签;</span><br><span class="line">- 利用Ctrl+Tab切换页签;</span><br><span class="line">- Alt+F4：关闭所有页签</span><br><span class="line">- Alt+Shift+1：开启cmd.exe</span><br><span class="line">- Alt+Shift+2：开启powershell.exe</span><br><span class="line">- Alt+Shift+3：开启powershell.exe (系统管理员权限)</span><br><span class="line">- Ctrl+1：快速切换到第1个页签</span><br><span class="line">- Ctrl+n：快速切换到第n个页签( n值无上限)</span><br><span class="line">- Alt + enter： 切换到全屏状态；</span><br><span class="line">- Ctr+r 历史命令搜索</span><br></pre></td></tr></table></figure><p>2.可在视窗内搜寻画面上出现过的任意关键字。</p><p>3.新增页签按钮。</p><p>4.切换页签按钮。</p><p>5.锁定视窗，让视窗无法再输入。</p><p>6.切换视窗是否提供卷轴功能，启动时可查询之前显示过的内容。</p><p>7.按下滑鼠左键可开启系统选单，滑鼠右键可开启工具选项视窗。 Win+Alt+P ：开启工具选项视窗。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cmder </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 的使用教程</title>
      <link href="/posts/8aea549c.html"/>
      <url>/posts/8aea549c.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070931694.png" alt="image-20230206074352715"></p><h1 id="Git的介绍"><a href="#Git的介绍" class="headerlink" title="Git的介绍"></a>Git的介绍</h1><ul><li>开源的分布式版本控制系统，用于敏捷高效地处理任何或大或小的项目</li><li>为了帮助管理Linux内核开发而开发的一个开放源码的版本控制软件</li><li>可以使用本地创建仓库与网络仓库，解决了集中管理型版本控制软件存在的一些问题（例如：SVN）。</li></ul><h2 id="分布式与集中式的区别"><a href="#分布式与集中式的区别" class="headerlink" title="分布式与集中式的区别"></a>分布式与集中式的区别</h2><ul><li>git是分布式版本管理系统，svn和csv是集中式版本管理系统</li><li>集中式的版本控制系统每次在写代码时都需要从服务器中拉取一份下来，并且如果服务器丢失了，那么所有的就都丢失了，你本机客户端仅保存当前的版本信息，</li><li>分布式的区别在于，每个人的电脑都是服务器，当你从主仓库拉取一份代码下来后，你的电脑就是服务器，无需担心主仓库被删或者找不到的情况，你可以自由在本地回滚，提交，当你想把自己的代码提交到主仓库时，只需要合并推送到主仓库就可以了，同时你可以把自己的代码新建一份仓库分享给其它人。</li><li>集中式都有一个主版本号，所有的版本迭代都以这个版本号为主。</li><li>git没有固定的版本号，但是有一个由哈希算法算出的id，用来回滚用的，同时也有一个master仓库，这个仓库是一切分支仓库的主仓库，我们可以推送提交到master并合并到主仓库上，主仓库的版本号会迭代一次，我们客户端上的git版本号无论迭代多少次，都跟master无关，只有合并时，master才会迭代一次。</li></ul><h2 id="Git的核心功能"><a href="#Git的核心功能" class="headerlink" title="Git的核心功能"></a>Git的核心功能</h2><h3 id="项目的版本控制"><a href="#项目的版本控制" class="headerlink" title="项目的版本控制"></a>项目的版本控制</h3><p>​    项目开发过程中，项目每开发到一个节点就会对当前项目进行备份，这个备份就是项目的一个版本，当我们继续开发一个阶段后，再次进行备份，就生成新的版本-多个版本的集合就是项目的版本库。</p><p>​    Git可以帮助我们对项目的版本库进行管理，在我们对项目进行误操作时，可以进行版本的回滚。</p><h3 id="团队协作开发"><a href="#团队协作开发" class="headerlink" title="团队协作开发"></a>团队协作开发</h3><p>​    Git是一个分布式的版本管理系统，在项目开发过程中，每个开发者都可以拉取仓库中的项目，完成后可以提交到仓库的分支进行合并。        </p><h2 id="Git的架构"><a href="#Git的架构" class="headerlink" title="Git的架构"></a>Git的架构</h2><p>架构图：</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070931264.png" alt="image-20230206220153983"></p><p>名词解释：</p><ul><li>工作空间（workspace）：存放项目代码的目录，就是项目的根目录</li><li>暂存区（Index）：版本库用于临时存储代码的缓存空间</li><li><p>版本仓库（Reposity）：存放项目历史版本的目录，就是执行git .init之后，在工作空间文件夹生成的.git文件夹</p></li><li><p>远程仓库（Remote）：网络上存放项目代码的仓库，即服务器仓库</p></li></ul><h1 id="Git的下载和安装"><a href="#Git的下载和安装" class="headerlink" title="Git的下载和安装"></a>Git的下载和安装</h1><h2 id="Git的下载"><a href="#Git的下载" class="headerlink" title="Git的下载"></a>Git的下载</h2><p>官网地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>点击Download for Windows进行下载</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070931634.png" alt="1672267917790"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070931760.png" alt="image-20230206214048801"></p><h2 id="Git的安装"><a href="#Git的安装" class="headerlink" title="Git的安装"></a>Git的安装</h2><p>双击下载的.exe文件进行安装，安装路径可以自定义，其他下一步即可</p><p>检查是否安装成功，命令行输入以下命令,出现版本号则安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932219.png" alt="image-20230206214445711"></p><h1 id="Git的基本使用"><a href="#Git的基本使用" class="headerlink" title="Git的基本使用"></a>Git的基本使用</h1><p>常用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置用户信息</span></span><br><span class="line"><span class="comment"># -----------------</span></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span>   </span><br><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment"># gitee</span></span><br><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;9400656+Your Name@user.noreply.gitee.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将内容提交到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 件暂存区内容提交到本地仓库</span></span><br><span class="line">git commit -m <span class="string">&#x27;版本说明&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将本地仓库内容提交到远程仓库</span></span><br><span class="line"><span class="comment"># Github的主分支为main，Gitee的主分支为master</span></span><br><span class="line"><span class="comment"># --------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line">git remote add origin https://github.com/chenyouchang/test.git    <span class="comment"># 关联远程仓库</span></span><br><span class="line">git branch -M main                                                <span class="comment"># 切换到main分支</span></span><br><span class="line">git push -u origin main                                           <span class="comment"># 将内容push到远程仓库的main分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># gitee</span></span><br><span class="line">git remote add origin https://gitee.com/chen4918/gitee-test.git    <span class="comment"># 关联远程仓库</span></span><br><span class="line">git push -u origin <span class="string">&quot;master&quot;</span>                                        <span class="comment"># 将内容push到远程仓库的master分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本库中的历史版本</span></span><br><span class="line">git <span class="built_in">log</span> --oneline     <span class="comment">##每个版本信息只显示一行</span></span><br><span class="line">git <span class="built_in">log</span>               <span class="comment">##显示每个版本的详细信息</span></span><br><span class="line">git reflog            <span class="comment"># 查看提交历史，包括回滚的版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同步历史版本到工作空间</span></span><br><span class="line">git checkout 版本号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回滚仓库版本</span></span><br><span class="line">git reset --hard 版本号 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远程仓库地址</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除现有仓库</span></span><br><span class="line">git remote <span class="built_in">rm</span> origin</span><br></pre></td></tr></table></figure><h1 id="Git提交到Github"><a href="#Git提交到Github" class="headerlink" title="Git提交到Github"></a>Git提交到Github</h1><blockquote><p>Github的主分支为main，Gitee的主分支为master</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> git config --global user.name &quot;Your Name&quot;   </span><br><span class="line"> git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git init</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin https://github.com/chenyouchang/test.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p>1.在项目根目录根目录右键Git Bash Here</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932871.png" alt="image-20230206222817888"></p><p>2.设置用户信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span>   </span><br><span class="line">git config --global user.email <span class="string">&quot;you@example.com&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932434.png" alt="image-20230206223112191"></p><p>3.初始化仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932322.png" alt="image-20230206223218496"></p><p>4.初始化后会生成git的配置文件目录.git</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932089.png" alt="image-20230206223759941"></p><p>5.将工作空间的修改添加到暂存区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add filename    <span class="comment"># filename是你想要提交的文件的文件名，代表将该文件添加到暂存区</span></span><br><span class="line">git add .           <span class="comment"># .代表所有文件，将所有文件添加到暂存区</span></span><br></pre></td></tr></table></figure><p>6.将暂存区内容提交到版本库（仓库）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&#x27;版本说明&#x27;</span></span><br></pre></td></tr></table></figure><p>7.关联远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/chenyouchang/test.git</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932025.png" alt="image-20230206230658534">    </p><p>8.提交项目到master分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932242.png" alt="image-20230206231047024"></p><p>可以看到项目已经提交成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932466.png" alt="image-20230206232304123"></p><h1 id="Git提交到Gitee"><a href="#Git提交到Gitee" class="headerlink" title="Git提交到Gitee"></a>Git提交到Gitee</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;chen4918&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;9400656+chen4918@user.noreply.gitee.com&quot;</span></span><br><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin https://gitee.com/chen4918/gitee-test.git</span><br><span class="line">git push -u origin <span class="string">&quot;master&quot;</span></span><br></pre></td></tr></table></figure><p>1.在项目根目录根目录右键Git Bash Here</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932649.png" alt="image-20230206222817888"></p><p>2.设置用户信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;chen4918&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;9400656+chen4918@user.noreply.gitee.com&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070932048.png" alt="image-20230206232356088"></p><p>3.初始化仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933114.png" alt="image-20230206223218496"></p><p>4.初始化后会生成git的配置文件目录.git</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933347.png" alt="image-20230206223759941"></p><p>5.将工作空间的修改添加到暂存区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add filename    <span class="comment"># filename是你想要提交的文件的文件名，代表将该文件添加到暂存区</span></span><br><span class="line">git add .           <span class="comment"># .代表所有文件，将所有文件添加到暂存区</span></span><br></pre></td></tr></table></figure><p>6.将暂存区内容提交到版本库（仓库）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&#x27;版本说明&#x27;</span></span><br></pre></td></tr></table></figure><p>7.关联远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://gitee.com/chen4918/gitee-test.git</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933169.png" alt="">    </p><p>8.提交项目到master分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch -M master</span><br><span class="line">git push -u origin <span class="string">&quot;master&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933996.png" alt=""></p><p>可以看到提交的项目</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933409.png" alt="image-20230206234127336"></p><h1 id="Git的版本回退"><a href="#Git的版本回退" class="headerlink" title="Git的版本回退"></a>Git的版本回退</h1><p>当我们编写代码时发生了误操作，导致项目出错，可以通过Git的版本控制，回滚仓库的版本</p><p>1.查看版本库中的历史版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看版本库中的历史版本</span></span><br><span class="line">git <span class="built_in">log</span> --oneline     <span class="comment">##每个版本信息只显示一行</span></span><br><span class="line">git <span class="built_in">log</span>               <span class="comment">##显示每个版本的详细信息</span></span><br><span class="line">git reflog            <span class="comment">#查看当前版本库的提交历史，凡是对仓库版本进行迭代的都会出现在这个里面，包括你回滚版本都会出现在这个历史中</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933203.png" alt="image-20230207003729961"></p><p>2.回滚仓库版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 要回滚id</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933910.png" alt="image-20230207004004267"></p><h1 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h1><p>创建分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch branch_name</span><br></pre></td></tr></table></figure><p>查看分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><p>切换分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout branch_name</span><br></pre></td></tr></table></figure><p>检出分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout 历史版本 -b branch_name</span><br></pre></td></tr></table></figure><p>分支合并</p><ul><li>三方合并</li><li>快速合并</li></ul><p>在master分支执行git merge dev 表示将dev分支合并merge</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge branch_name</span><br></pre></td></tr></table></figure><h1 id="Git关联IDEA的使用"><a href="#Git关联IDEA的使用" class="headerlink" title="Git关联IDEA的使用"></a>Git关联IDEA的使用</h1><p>作为Java开发工程师，我们代码的编写工作都是在IDE工具（idea）中完成，因此我们需要了解和掌握之间使用IDE工具完成Git操作</p><h2 id="设置Git关联IDEA"><a href="#设置Git关联IDEA" class="headerlink" title="设置Git关联IDEA"></a>设置Git关联IDEA</h2><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933844.png" alt="1672298380231"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933363.png" alt="1672298432324"></p><h2 id="IDEA中的版本管理"><a href="#IDEA中的版本管理" class="headerlink" title="IDEA中的版本管理"></a>IDEA中的版本管理</h2><p>1.准备工作 打开idea新建一个web工程</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070933444.png" alt="1672300527579"></p><p>（1）创建本地仓库</p><p>（2）设置忽略文件</p><p>​    在工作空间中有些文件是不需要记录到版本库中的，例如.idea target，可以设置忽略提交来实现</p><ul><li><p>在工作空间的根目录（项目的根目录）中创建一个名为.gitignore的文件（新版ieda自动创建）</p></li><li><p>.gitignore配置忽略条件</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">target/</span><br><span class="line">!.mvn/wrapper/maven-wrapper.jar</span><br><span class="line">!**/src/main/**/target/</span><br><span class="line">!**/src/test/**/target/</span><br><span class="line"></span><br><span class="line">### IntelliJ IDEA ###</span><br><span class="line">.idea/modules.xml</span><br><span class="line">.idea/jarRepositories.xml</span><br><span class="line">.idea/compiler.xml</span><br><span class="line">.idea/libraries/</span><br><span class="line">*.iws</span><br><span class="line">*.iml</span><br><span class="line">*.ipr</span><br></pre></td></tr></table></figure><p>2.将工作空间add到暂存区</p><p>（1）选择项目/某个文件-右键-Git-Add（添加到暂存区的文件-绿色）</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070934521.png" alt="1672301022634"></p><p>添加到暂存区的操作可以设置默认添加</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070934019.png" alt="1672301255616"></p><p>3.将暂存区提交到版本库</p><ul><li>选择项目/文件-右键-Git-Commit（提交到版本库的文件-黑色）</li><li>如果对记录到版本库的文件进行修改，工作空间与版本库不一致（不一致为蓝色）</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070934597.png" alt="1672302079456"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070934108.png" alt=""></p><p>4.将版本库中的项目push到远程仓库</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070934802.png" alt="image-20230207004742967"></p><h2 id="idea中Git的分支管理"><a href="#idea中Git的分支管理" class="headerlink" title="idea中Git的分支管理"></a>idea中Git的分支管理</h2><p>1.创建分支</p><p>点击idea右下角Git，在弹窗点击New Branch，输入新分支的名称</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070934409.png" alt="1672302742281"></p><p>2.切换分支，点击idea右下角Git，点击非当前分支右边的箭头，在选项卡点击checkout</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070934835.png" alt="1672302961579"></p><p>3.删除分支</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070934283.png" alt="1672303468747"></p><p>4.合并分支</p><p>例如：将dev合并到master</p><ul><li>切换到master分支</li><li>点击dev分支右边箭头，点击Merge into Master</li></ul><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302070934258.png" alt="1672303655605"></p>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github Action 实现全自动部署 Hexo</title>
      <link href="/posts/bdf513db.html"/>
      <url>/posts/bdf513db.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071326608.png" alt="image-20230206074352715"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><a href="https://github.com/features/actions">Github Action</a>是 GitHub于2018年10月推出的一个CI\CD服务。</p><p>每次部署<code>Hexo</code>都需要运行指令三件套，随着文章越来越多，编译的时间也随之越来越长，通过<code>Github Action</code>，我们只需要在每次完成博客的编写或修改以后，将改动直接<code>push</code>到远程仓库，之后的编译部署的工作统统交给<code>CI</code>来完成即可，</p><p>github action的最大作用就是进一步提高速度和便携性.</p><p>首先，配置要求提交源码这点，就没必要再靠本地不断新建压缩包来备份源码了，借助git的版本管理，不管怎么改都可以快速回滚。<br>然后，git提交是增量更新，每次只提交新增或者删改的内容，而hexo deploy是在本地每次重新生成所有静态文件以后再整个提交。github action能帮我们节省大把时间，把最耗时的hexo generate和hexo deploy的工作丢给CI处理。让我们能够专心与编写博客内容.</p><h1 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h1><h2 id="获取Token"><a href="#获取Token" class="headerlink" title="获取Token"></a>获取Token</h2><blockquote><p>为了确保交由<code>Github Action</code>来持续部署时，<code>Github Action</code>具备足够的权限来进行<code>hexo deploy</code>操作,需要先获取<code>Token</code>。</p></blockquote><p>1.访问Github-&gt;头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens-&gt;Token(classic),点击Generate new token</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071326375.png" alt="image-20230207122314110"></p><p>2.填写Tokne信息</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071326718.png" alt="image-20230207122600655"></p><p>3.点击下方的Generate token按钮生成token</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071326263.png" alt="image-20230207123008412"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">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</span><br></pre></td></tr></table></figure><h2 id="创建存放源码的私有仓库"><a href="#创建存放源码的私有仓库" class="headerlink" title="创建存放源码的私有仓库"></a>创建存放源码的私有仓库</h2><blockquote><p>我们需要创建一个用来存放<code>Hexo</code>博客源码的私有仓库</p></blockquote><p>1.进入Github,点击New创建新的仓库</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071326647.png" alt="image-20230207124304324"></p><p>2.填写仓库信息，仓库形式为私有仓库</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071327763.png" alt="image-20230207124147793"></p><p>3.点击Create按钮生成仓库</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071327206.png" alt="image-20230207124227980"></p><p>创建完成后，需要把博客的源码<code>push</code>到这里。首先获取远程仓库地址，此处虽然<code>SSH</code>和<code>HTTPS</code>均可。<code>SSH</code>在绑定过<code>ssh key</code>的设备上无需再输入密码，<code>HTTPS</code>则需要输入密码，但是<code>SSH</code>偶尔会遇到端口占用的情况。</p><h2 id="配置Github-Action"><a href="#配置Github-Action" class="headerlink" title="配置Github Action"></a>配置Github Action</h2><p>1.在项目根目录下新建<code>.github</code>文件夹,注意开头是有个<code>.</code>的。然后在<code>.github</code>内新建<code>workflows</code>文件夹，再在<code>workflows</code>文件夹内新建<code>autodeploy.yml</code>,在<code>[Blogroot]/.github/workflows/autodeploy.yml</code>里面输入</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当有改动推送到master分支时，启动Action</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">release:</span></span><br><span class="line">    <span class="attr">types:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">published</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查分支</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">main</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;12.19.0&quot;</span> <span class="comment">#action使用的node版本，建议大版本和本地保持一致。可以在本地用node -v查询版本号。</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">缓存</span> <span class="string">Hexo</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">        <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo generate</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署</span> <span class="comment">#此处master:master 指从本地的master分支提交到远程仓库的master分支，若远程仓库没有对应分支则新建一个。如有其他需要，可以根据自己的需求更改。</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          cd ./public</span></span><br><span class="line"><span class="string">          git init</span></span><br><span class="line"><span class="string">          git config --global user.name &#x27;$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;&#x27;</span></span><br><span class="line"><span class="string">          git config --global user.email &#x27;$&#123;&#123; secrets.GITHUBEMAIL &#125;&#125;&#x27;</span></span><br><span class="line"><span class="string">          git add .</span></span><br><span class="line"><span class="string">          git commit -m &quot;$&#123;&#123; github.event.head_commit.message &#125;&#125; $(date +&quot;%Z %Y-%m-%d %A %H:%M:%S&quot;) Updated By Github Actions&quot;</span></span><br><span class="line"><span class="string">          git push --force --quiet &quot;https://$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;:$&#123;&#123; secrets.GITHUBTOKEN &#125;&#125;@github.com/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;.github.io.git&quot; master:main</span></span><br><span class="line"><span class="string">          #git push --force --quiet &quot;https://$&#123;&#123; secrets.TOKENUSER &#125;&#125;:$&#123;&#123; secrets.CODINGTOKEN &#125;&#125;@e.coding.net/$&#123;&#123; secrets.CODINGUSERNAME &#125;&#125;/$&#123;&#123;  secrets.CODINGBLOGREPO &#125;&#125;.git&quot; master:master #coding部署写法，需要的自行取消注释</span></span><br><span class="line"><span class="string">          #git push --force --quiet &quot;https://$&#123;&#123; secrets.GITEEUSERNAME &#125;&#125;:$&#123;&#123; secrets.GITEETOKEN &#125;&#125;@gitee.com/$&#123;&#123; secrets.GITEEUSERNAME &#125;&#125;/$&#123;&#123; secrets.GITEEUSERNAME &#125;&#125;.git&quot; master:master #gitee部署写法，需要的自行取消注释</span></span><br></pre></td></tr></table></figure><p>注意最后一行的<code>master:master</code>指从本地的master分支提交到远程仓库的master分支,github在2020年10月将默认分支改为main。而git软件在本地默认创建的分支依然是master，所以若你线上仓库默认分支是main，这里应该写成master:main，表示从本地的master推送到远程的main。</p><p>2.之后需要自己到仓库的Settings-&gt;Actions secrets and variables-&gt;actions 下添加环境变量</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071327023.png" alt="image-20230207125356008"></p><p>参考脚本autodeploy.yml中出现的变量名，依次添加GITHUBUSERNAME<code>、</code>GITHUBEMAIL<code>、</code>GITHUBTOKEN</p><p>例如添加GITHUBUSERNAME:</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071327445.png" alt="image-20230207125911943"></p><p>依次添加三个变量</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071327447.png" alt="image-20230207130135097"></p><h2 id="重新设置远程仓库和分支"><a href="#重新设置远程仓库和分支" class="headerlink" title="重新设置远程仓库和分支"></a>重新设置远程仓库和分支</h2><p>1.删除或者先把根目录下<code>/themes/butterfly/.git</code>移动到非博客文件夹目录下,原因是主题文件夹下的<code>.git</code>文件夹的存在会导致其被识别成子项目，从而无法被上传到源码仓库。</p><p>2.在项目跟目录下允许以下指令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git init             <span class="comment">#初始化</span></span><br><span class="line">git remote add origin git@github.com:chenyouchang/hexo-blog-source.git          <span class="comment">#[SourceRepo]为存放源码的github私有仓库</span></span><br><span class="line">git checkout -b main                 <span class="comment"># 切换到master分支,2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br></pre></td></tr></table></figure><p>3.添加屏蔽项</p><p>因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到github上。这样可以显著减少需要提交的文件量和加快提交速度。</p><p>打开根目录下的.gitignore`,输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure><p>如果不是<code>butterfly</code>主题，记得替换最后一行内容为你自己当前使用的主题。</p><p>4.之后再运行git提交指令，将博客源码提交到github上。牢记下方的三行指令，以后都是通过这个指令进行提交。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;自动部署第一次提交&quot;</span>            <span class="comment">#引号内的内容可以自行更改作为提交记录。</span></span><br><span class="line">git push origin main               <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br></pre></td></tr></table></figure><p>5.此时项目已经提交到Github上了</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071329033.png" alt="image-20230207131616831"></p><h1 id="查看部署情况"><a href="#查看部署情况" class="headerlink" title="查看部署情况"></a>查看部署情况</h1><p>1.打开GIthub存放源码的私有仓库，找到action，可以看到刚刚的提交</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071327192.png" alt="image-20230207131947366"></p><p>2.点击你提交项目的commit记录</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071327617.png" alt="image-20230207132050578"></p><p>3.点击Deploy查看部署情况</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071327213.png" alt="image-20230207132221191"></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071327975.png" alt="image-20230207132242847"></p><p>全部打勾，则部署成功</p><h1 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h1><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071329147.png" alt="image-20230207132547098"></p>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客</title>
      <link href="/posts/ec7d7221.html"/>
      <url>/posts/ec7d7221.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302041541113.png" alt="image-20230204150818836"></p><p>​                                                                                                                                                                                                                                                                </p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>安装Hexo所需的环境：</p><blockquote><p>下面的版本为本次安装演示的版本，版本可以自行选择</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">操作系统：</span><br><span class="line">Windows</span><br><span class="line">Nodejs：</span><br><span class="line">12.19.0</span><br><span class="line">Git:</span><br><span class="line">2.39.0</span><br><span class="line">IDEA</span><br><span class="line">Github账号：</span><br><span class="line">chenyouchang</span><br><span class="line">Github邮箱：</span><br><span class="line">1026597164@qq.com</span><br><span class="line">一个域名：</span><br><span class="line">julissa.cn</span><br></pre></td></tr></table></figure><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>1.创建JulissaBlog文件夹,用于存储项目的根目录</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071852400.png" alt="image-20230204173319117"></p><p>2.管理员权限打开cmd窗口，cd到JulissaBlog目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d:                   <span class="comment"># 切换到D盘</span></span><br><span class="line"><span class="built_in">cd</span> JulissaBlog       <span class="comment"># 切换到JulissaBlog目录</span></span><br></pre></td></tr></table></figure><p>3.执行hexo全局安装指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>4.安装完后验证是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>出现下面的界面则安装成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071852566.png" alt="image-20230204185538777"></p><p>5.初始化Hexo项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog           <span class="comment"># blog为自己取的项目名（项目的根目录）</span></span><br></pre></td></tr></table></figure><p>初始化项目成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071852427.png" alt="image-20230204185615871"></p><p>初始化项目后,项目的结果如下：</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071852829.png" alt="image-20230204184219231"></p><p>6.进入根目录，安装相关依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm i              <span class="comment">#npm install</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071852765.png" alt="image-20230204185646126"></p><p>7.启动项目，站点根目录命令行输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server   <span class="comment"># 可缩写为hexo s</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071852620.png" alt="image-20230204185736591"></p><p>8.在浏览器输入<a href="http://localhost:4000/">http://localhost:4000/</a></p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071852374.png" alt="image-20230204184621703"></p><p>至此站点搭建成功</p><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><p>1.Hexo的常用指令</p><div class="table-container"><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>hexo clean</td><td>清除本地项目并重新生成 （重新部署时使用）</td></tr><tr><td>hexo g</td><td>重新生成</td></tr><tr><td>hexo s</td><td>开启本地预览</td></tr><tr><td>Hexo d</td><td>推送到github</td></tr></tbody></table></div><p>2.其他指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;我的第一篇文章&quot; 等价于 hexo new &quot;我的第一篇文章&quot; 还等价于 hexo new post &quot;我的第一篇文章&quot;</span><br><span class="line">hexo p 等价于 hexo publish</span><br><span class="line">hexo g 等价于 hexo generate</span><br><span class="line">hexo s等价于 hexo server</span><br><span class="line">hexo d 等价于 hexo deploy</span><br><span class="line">hexo deploy -g 等价于 hexo deploy --generate</span><br><span class="line">hexo generate -d等价于hexo generate --deploy</span><br><span class="line"></span><br><span class="line">hexo server -s #以静态模式启动</span><br><span class="line">hexo server -p 5000 #更改访问端口 (默认端口为4000，&#x27;ctrl + c&#x27;关闭server)</span><br><span class="line">hexo server -i IP地址 #自定义 IP</span><br><span class="line">hexo clean #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹</span><br><span class="line">hexo g #生成静态网页 (执行 $ hexo g后会在站点根目录下生成public文件夹, hexo会将&quot;/blog/source/&quot; 下面的.md后缀的文件编译为.html后缀的文件,存放在&quot;/blog/public/ &quot; 路径下)</span><br><span class="line">hexo d #将本地数据部署到远端服务器(如github)</span><br><span class="line">hexo init 文件夹名称 #初始化XX文件夹名称</span><br><span class="line">npm update hexo -g#升级</span><br><span class="line">npm install hexo -g#安装</span><br><span class="line">node-v #查看node.js版本号</span><br><span class="line">npm -v #查看npm版本号</span><br><span class="line">git --version #查看git版本号</span><br><span class="line">hexo -v #查看hexo版本号</span><br></pre></td></tr></table></figure><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><p>1.主题下载的方式有三种</p><ul><li>git clone</li><li>npm</li><li>下载zip压缩包</li></ul><p>2.下载主题，git clone方式下载</p><p>到<a href="https://hexo.io/themes/选择自己喜欢的主题，这里配置的主题是butterfly">https://hexo.io/themes/选择自己喜欢的主题，这里配置的主题是butterfly</a> 4.3.1版本</p><p>管理员打开cmd，进入到站点的根目录下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b 4.3.1 https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p><img src="E:\小清Markdown\assets\image-20230204191127098.png" alt="image-20230204191127098"></p><p>克隆成功之后的主题：</p><p><img src="E:\小清Markdown\assets\image-20230204191246210.png" alt="image-20230204191246210"></p><p>3.修改站点配置文件_config.yml，把主题改为butterfly</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071853975.png" alt="image-20230204191612815"></p><p>4.安装pug<code>以及</code>stylus`的渲染器</p><blockquote><p><code>pug</code>以及<code>stylus</code>两个渲染器是<code>Butterfly</code>生成基础页面所需的依赖包</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071853198.png" alt="image-20230204191717432"></p><p>5.优化配置</p><p>把主题文件夹中的 _config.yml 复制到 Hexo 根目录里，同时重新命名为 _config.butterfly.yml。</p><p>以后只需要在config.butterfly.yml进行行配置即可生效。</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071853920.png" alt="image-20230204192032666"></p><p>6.重启项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071853463.png" alt="image-20230204192216384"></p><p>7.主题更改成功</p><p><img src="https://cdn.staticaly.com/gh/chenyouchang/markdown_pic@main/2023/01/202302071853280.png" alt="image-20230204192255651"></p>]]></content>
      
      
      <categories>
          
          <category> Tutorial </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
